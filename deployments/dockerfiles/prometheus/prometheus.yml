# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
#  - 'alert.rules'
# - "first_rules.yml"
# - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

  # this is the configuration to poll metrics from probing
  - job_name: 'probing'
    scrape_interval: 15s
    metrics_path: /q/metrics
    static_configs:
      - targets: ['probing-service:8080']
  # this is the configuration to poll metrics from scraping
  - job_name: 'scraping'
    scrape_interval: 15s
    metrics_path: /q/metrics
    static_configs:
      - targets: ['scraping-service:8080']
  # this is the configuration to poll metrics from crawling
  - job_name: 'crawling'
    scrape_interval: 15s
    metrics_path: /q/metrics
    static_configs:
      - targets: ['crawling-service:8080']
  # this is the configuration to poll metrics from scheduling
  - job_name: 'scheduling'
    scrape_interval: 15s
    metrics_path: /q/metrics
    static_configs:
      - targets: ['scheduling-service:8080']
  # this is the configuration to poll metrics from searching
  - job_name: 'searching'
    scrape_interval: 15s
    metrics_path: /q/metrics
    static_configs:
      - targets: ['searching-service:8080']